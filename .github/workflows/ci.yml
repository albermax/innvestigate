name: CI

on: 
  - push
  - pull_request

jobs:
  formatting:
    # Run formatting checks outside of matrix
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      # Check-out repo and set-up python  
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      # Load pip cache if it exists
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      # Install and run linters
      - run: python -m pip install black isort
      - name: Format check with Black
        run: black --check .
      - name: Format check with isort
        run: isort --check .
  test:
    name: Tests Python ${{ matrix.python-version }} - ${{ matrix.os }} - ${{ matrix.architecture }}
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
        architecture: 
          - x64
        python-version: 
          - '3.8'
          - '3.10'
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      # Check-out repo and set-up python     
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      # Install & configure poetry      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      # Load cached venv if cache exists      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # Install dependencies
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      # Run fast tests on matrix.
      # Coverage options can be found in pyproject.toml
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest ./tests -m fast 
